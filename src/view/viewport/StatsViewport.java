/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.viewport;

import application.Application;
import java.util.ArrayList;

import model.ModelViewBundle;
import model.entity.Entity;
import model.entity.stats.SmasherStats;
import model.entity.stats.SmasherStatsVisitor;
import model.entity.stats.SneakStats;
import model.entity.stats.SneakStatsOwnership;
import model.entity.stats.SneakStatsVisitor;
import model.entity.stats.Stats;
import model.entity.stats.StatsOwnership;
import model.entity.stats.StatsVisitor;
import model.entity.stats.SummonerStats;
import model.entity.stats.SummonerStatsVisitor;
import mvc_bridgeway.command.model_command.ExitCommand;
import mvc_bridgeway.control.virtual_control.swing_control.SwingControl;
import mvc_bridgeway.control_map.ControlMap;

/**
 *
 * @author comcc_000
 */
public class StatsViewport extends Viewport implements StatsVisitor, SneakStatsVisitor, SummonerStatsVisitor, SmasherStatsVisitor {

    /**
     * Creates new form MainScreen
     */
    public StatsViewport() {
        // TODO: 
        StatsOwnership s = new SneakStatsOwnership(new Entity());
        s.accept(this);
        
        
        //
        initComponents();
    }
    
        
    @Override
    protected void generateView() {
        //TODO
    }
    
    @Override
    public void update(ModelViewBundle mvb) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public ArrayList<ControlMap> getControlMaps() {
        ArrayList<ControlMap> controlMaps = new ArrayList<ControlMap>();
        //TODOD
        return controlMaps;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 759, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 555, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void visit(Stats stats) {
        Application.print("Regular "+stats.toString());
    }

    @Override
    public void visit(SneakStats stats) {
        Application.print("Sneak "+stats.toString());
    }

    @Override
    public void visit(SummonerStats stats) {
        Application.print("Summoner "+stats.toString());
    }

    @Override
    public void visit(SmasherStats stats) {
        Application.print("Smasher "+stats.toString());
    }
  
}
