/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.viewport;

import java.util.ArrayList;
import model.ModelViewBundle;
import model.effect.statseffect.HealDamage;
import model.entity.avatar.Avatar;
import model.item.sackbound.LimitedConsumptionItem;
import mvc_bridgeway.command.model_command.LaunchScreenCommand;
import mvc_bridgeway.command.model_command.Purchase;
import mvc_bridgeway.control.virtual_control.swing_control.ButtonSwingControl;
import mvc_bridgeway.control_map.ControlMap;
import mvc_bridgeway.screen.GameScreen;

/**
 *
 * @author comcc_000
 */
public class TradeViewport extends Viewport {

    private ArrayList<ControlMap> cms = new ArrayList<ControlMap>();
    //
    private boolean runOnceAlready = false;
    
    public TradeViewport() {
        initComponents();
    }
    
    @Override
    protected void generateView() {
        //TODO
    }
    
    @Override
    public void update(ModelViewBundle mvb) {
        if (!runOnceAlready) {
            Avatar avatar = mvb.getAvatar();
            int bluePotPrice = 2;
            int redPotPrice = 3;
            LimitedConsumptionItem redPot = new LimitedConsumptionItem("HealthPot", "RedPot", 1);
            LimitedConsumptionItem bluePot = new LimitedConsumptionItem("ManaPot", "RedPot", 1);
            cms.add(new ControlMap( new ButtonSwingControl(bluePotButton), new Purchase(avatar, bluePot, bluePotPrice) ) );
            cms.add(new ControlMap( new ButtonSwingControl(redPotButton), new Purchase(avatar, redPot, redPotPrice) ) );
            cms.add(new ControlMap( new ButtonSwingControl(doneButton), new LaunchScreenCommand(new GameScreen() ) ) );
            flagRefreshController();
            runOnceAlready = true;
        }
    }

    @Override
    public ArrayList<ControlMap> getControlMaps() {
        return cms;
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        redPotButton = new javax.swing.JButton();
        bluePotButton = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        redPotButton.setText("Red Pot");

        bluePotButton.setText("Blue Pot");

        doneButton.setText("Done");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(redPotButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bluePotButton))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(doneButton))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(redPotButton)
                    .addComponent(bluePotButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(doneButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(201, 230, 221, 280);
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bluePotButton;
    private javax.swing.JButton doneButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton redPotButton;
    // End of variables declaration//GEN-END:variables
  
}
