/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.viewport;

import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import model.ModelViewBundle;
import model.item.sackbound.equip.EquipItem;
import model.item.sackbound.equip.EquipItem.EquipSlot;
import mvc_bridgeway.control_map.ControlMap;
import utility.ImageUtil;

/**
 *
 * @author comcc_000
 */
public class ArmoryViewport extends Viewport {

    /**
     * Creates new form MainScreen
     */
    public ArmoryViewport() {
        initComponents();
    }
    
    @Override
    protected void generateView() {
        //TODO
    }
    
    @Override
    public void update(ModelViewBundle mvb) {
        List<EquipItem> equippedItems = mvb.getEquipment();
        for (EquipItem equipItem : equippedItems) {
            displayEquipItem(equipItem);
        }
    }
    
    private void displayEquipItem(EquipItem ei) {
        if (ei == null) {
            return;
        }
        EquipSlot es = ei.getEquipSlot();
        if (es.equals(es.HEAD)) {
            displayItem(ei, head_slot_);
        } else if (es.equals(es.TORSO)) {
            displayItem(ei, body_slot_);
        } else if (es.equals(es.MAINHAND)) {
            displayItem(ei, right_slot_);
        } else if (es.equals(es.OFFHAND)) {
            displayItem(ei, left_slot_);
        } else if (es.equals(es.LEGS)) {
            displayItem(ei, legs_slot_);
        }
    }
    
    private void displayItem(EquipItem ei, JButton button) {
        ImageIcon imageIcon = ImageUtil.getImageIcon("./src/resources/png/grass.png");
        button.setIcon(imageIcon);
    }

    @Override
    public ArrayList<ControlMap> getControlMaps() {
        ArrayList<ControlMap> controlMaps = new ArrayList<ControlMap>();

        return controlMaps;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        head_slot_ = new javax.swing.JButton();
        body_slot_ = new javax.swing.JButton();
        legs_slot_ = new javax.swing.JButton();
        right_slot_ = new javax.swing.JButton();
        left_slot_ = new javax.swing.JButton();

        head_slot_.setText("Head");

        body_slot_.setText("Body");

        legs_slot_.setText("Legs");

        right_slot_.setText("Right");

        left_slot_.setText("Left");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(left_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(legs_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(head_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(body_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(right_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(head_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(body_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(left_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(right_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(legs_slot_, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton body_slot_;
    private javax.swing.JButton head_slot_;
    private javax.swing.JButton left_slot_;
    private javax.swing.JButton legs_slot_;
    private javax.swing.JButton right_slot_;
    // End of variables declaration//GEN-END:variables
  
}
